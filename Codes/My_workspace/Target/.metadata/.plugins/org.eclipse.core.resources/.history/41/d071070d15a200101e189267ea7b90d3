/*
 * stm32_GPIO.h
 *
 *  Created on: Oct 5, 2025
 *      Author: ANAS
 */

#ifndef STM32_GPIO_H_
#define STM32_GPIO_H_


/// GPIO Structure

typedef struct
{
    volatile uint32_t MODER;    // Mode register                 		(offset 0x00)
    volatile uint32_t OTYPER;   // Output type register           		(offset 0x04)
    volatile uint32_t OSPEEDR;  // Output speed register          		(offset 0x08)
    volatile uint32_t PUPDR;    // Pull-up/pull-down register     		(offset 0x0C)
    volatile uint32_t IDR;      // Input data register            		(offset 0x10)
    volatile uint32_t ODR;      // Output data register           		(offset 0x14)
    volatile uint32_t BSRR;     // Bit set/reset register         		(offset 0x18)
    volatile uint32_t LCKR;     // Configuration lock register    		(offset 0x1C)
    volatile uint32_t AFRL;     // Alternate function low register		(offset 0x20)
    volatile uint32_t AFRH;     // Alternate function high register		(offset 0x24)
}GPIO_TypeDef;


/// Seperate registers for GPIO


typedef union
{
	struct
	{
		volatile uint32 MODER0:2;
		volatile uint32 MODER1:2;
	}bits;
	volatile uint32 all;
}MODER_bits;




#endif /* STM32_GPIO_H_ */
