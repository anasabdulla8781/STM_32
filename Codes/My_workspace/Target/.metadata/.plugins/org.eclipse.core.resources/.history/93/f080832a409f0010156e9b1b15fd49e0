/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <main.h>

void clock_init()
{
	/// Clock init
	RCC->AHB1ENR |=SET_GPIOAEN;			/// For switch( wakeup switch )
	RCC->AHB1ENR |=SET_GPIODEN;			/// For the LED to work
	RCC->APB2ENR |=SET_SYSCFGEN			/// For system config peripheral
}

void system_config_init()
{
	SYSCFG->EXTICR1&= CLEAR_EXTI0;		/// Clearing the EXTICR Register for the EXTI0
	SYSCFG->EXTICR1|= SET_EXTI0_PA0;	/// Setting EXTI0 Register in interrupt mode for the PA0
}

void pin_init()
{
	GPIOA->MODER&= CLEAR_MODER0;				/// Clearing the default mode of MODER0 of GPIOA
	GPIOA->MODER|= SET_MODER0_INPUT;			/// Setting the PA0 pin to input
	GPIOD->MODER&= CLEAR_MODER12;				/// Clearing the default mode for MODER12 of GPIOD
	GPIOD->MODER|=	SET_MODER12_OUTPUT			/// Setting the PD12 to output
}

void exti_init()
{
	EXTI->IMR&=CLEAR_EXTI0_IMR;
	EXTI->IMR|=SET_EXTI0_IMR;
	EXTI->FTSR&=CLEAR_EXTI0_FTSR;
	EXTI->FTSR|=SET_EXTI0_FTSR;
}

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
    /* Loop forever */
	clock_init();
	system_config_init();
	pin_init();
	while (1)
	{

	}
}
