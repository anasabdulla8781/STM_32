
05_interrupts_through_button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000026c  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003f4  080003fc  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003f4  080003f4  000013fc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080003f4  080003f4  000013fc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080003f4  080003fc  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003f4  080003f4  000013f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003f8  080003f8  000013f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013fc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY
 13 .debug_info   000003ea  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000147  00000000  00000000  00001816  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000078  00000000  00000000  00001960  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000050  00000000  00000000  000019d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000104a  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000590  00000000  00000000  00002a72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000040fa  00000000  00000000  00003002  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000070fc  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000120  00000000  00000000  00007140  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007e  00000000  00000000  00007260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003dc 	.word	0x080003dc

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003dc 	.word	0x080003dc

080001c8 <clock_init>:

#include <stdint.h>
#include <main.h>

void clock_init()
{
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
	/// Clock init
	RCC->AHB1ENR |=SET_GPIOAEN;			/// For switch( wakeup switch )
 80001cc:	4b0b      	ldr	r3, [pc, #44]	@ (80001fc <clock_init+0x34>)
 80001ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d0:	4a0a      	ldr	r2, [pc, #40]	@ (80001fc <clock_init+0x34>)
 80001d2:	f043 0301 	orr.w	r3, r3, #1
 80001d6:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |=SET_GPIODEN;			/// For the LED to work
 80001d8:	4b08      	ldr	r3, [pc, #32]	@ (80001fc <clock_init+0x34>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a07      	ldr	r2, [pc, #28]	@ (80001fc <clock_init+0x34>)
 80001de:	f043 0308 	orr.w	r3, r3, #8
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->APB2ENR |=SET_SYSCFGEN;			/// For system config peripheral
 80001e4:	4b05      	ldr	r3, [pc, #20]	@ (80001fc <clock_init+0x34>)
 80001e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80001e8:	4a04      	ldr	r2, [pc, #16]	@ (80001fc <clock_init+0x34>)
 80001ea:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80001ee:	6453      	str	r3, [r2, #68]	@ 0x44
}
 80001f0:	bf00      	nop
 80001f2:	46bd      	mov	sp, r7
 80001f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f8:	4770      	bx	lr
 80001fa:	bf00      	nop
 80001fc:	40023800 	.word	0x40023800

08000200 <system_config_init>:

void system_config_init()
{
 8000200:	b480      	push	{r7}
 8000202:	af00      	add	r7, sp, #0
	SYSCFG->EXTICR1&= CLEAR_EXTI0;		/// Clearing the EXTICR Register for the EXTI0
 8000204:	4b07      	ldr	r3, [pc, #28]	@ (8000224 <system_config_init+0x24>)
 8000206:	689a      	ldr	r2, [r3, #8]
 8000208:	4906      	ldr	r1, [pc, #24]	@ (8000224 <system_config_init+0x24>)
 800020a:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 800020e:	4013      	ands	r3, r2
 8000210:	608b      	str	r3, [r1, #8]
	SYSCFG->EXTICR1|= SET_EXTI0_PA0;	/// Setting EXTI0 Register in interrupt mode for the PA0
 8000212:	4b04      	ldr	r3, [pc, #16]	@ (8000224 <system_config_init+0x24>)
 8000214:	4a03      	ldr	r2, [pc, #12]	@ (8000224 <system_config_init+0x24>)
 8000216:	689b      	ldr	r3, [r3, #8]
 8000218:	6093      	str	r3, [r2, #8]
}
 800021a:	bf00      	nop
 800021c:	46bd      	mov	sp, r7
 800021e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000222:	4770      	bx	lr
 8000224:	40013800 	.word	0x40013800

08000228 <pin_init>:

void pin_init()
{
 8000228:	b480      	push	{r7}
 800022a:	af00      	add	r7, sp, #0
	GPIOA->MODER&= CLEAR_MODER0;				/// Clearing the default mode of MODER0 of GPIOA
 800022c:	4b0d      	ldr	r3, [pc, #52]	@ (8000264 <pin_init+0x3c>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a0c      	ldr	r2, [pc, #48]	@ (8000264 <pin_init+0x3c>)
 8000232:	f023 0303 	bic.w	r3, r3, #3
 8000236:	6013      	str	r3, [r2, #0]
	GPIOA->MODER|= SET_MODER0_INPUT;			/// Setting the PA0 pin to input
 8000238:	4b0a      	ldr	r3, [pc, #40]	@ (8000264 <pin_init+0x3c>)
 800023a:	4a0a      	ldr	r2, [pc, #40]	@ (8000264 <pin_init+0x3c>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER&= CLEAR_MODER12;				/// Clearing the default mode for MODER12 of GPIOD
 8000240:	4b09      	ldr	r3, [pc, #36]	@ (8000268 <pin_init+0x40>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a08      	ldr	r2, [pc, #32]	@ (8000268 <pin_init+0x40>)
 8000246:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 800024a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER|=	SET_MODER12_OUTPUT;			/// Setting the PD12 to output
 800024c:	4b06      	ldr	r3, [pc, #24]	@ (8000268 <pin_init+0x40>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a05      	ldr	r2, [pc, #20]	@ (8000268 <pin_init+0x40>)
 8000252:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000256:	6013      	str	r3, [r2, #0]
}
 8000258:	bf00      	nop
 800025a:	46bd      	mov	sp, r7
 800025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	40020000 	.word	0x40020000
 8000268:	40020c00 	.word	0x40020c00

0800026c <exti_init>:

void exti_init()
{
 800026c:	b480      	push	{r7}
 800026e:	af00      	add	r7, sp, #0
	EXTI->IMR&=CLEAR_EXTI0_IMR;
 8000270:	4b0e      	ldr	r3, [pc, #56]	@ (80002ac <exti_init+0x40>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a0d      	ldr	r2, [pc, #52]	@ (80002ac <exti_init+0x40>)
 8000276:	f023 0301 	bic.w	r3, r3, #1
 800027a:	6013      	str	r3, [r2, #0]
	EXTI->IMR|=SET_EXTI0_IMR;
 800027c:	4b0b      	ldr	r3, [pc, #44]	@ (80002ac <exti_init+0x40>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a0a      	ldr	r2, [pc, #40]	@ (80002ac <exti_init+0x40>)
 8000282:	f043 0301 	orr.w	r3, r3, #1
 8000286:	6013      	str	r3, [r2, #0]
	EXTI->FTSR&=CLEAR_EXTI0_FTSR;
 8000288:	4b08      	ldr	r3, [pc, #32]	@ (80002ac <exti_init+0x40>)
 800028a:	68db      	ldr	r3, [r3, #12]
 800028c:	4a07      	ldr	r2, [pc, #28]	@ (80002ac <exti_init+0x40>)
 800028e:	f023 0301 	bic.w	r3, r3, #1
 8000292:	60d3      	str	r3, [r2, #12]
	EXTI->FTSR|=SET_EXTI0_FTSR;
 8000294:	4b05      	ldr	r3, [pc, #20]	@ (80002ac <exti_init+0x40>)
 8000296:	68db      	ldr	r3, [r3, #12]
 8000298:	4a04      	ldr	r2, [pc, #16]	@ (80002ac <exti_init+0x40>)
 800029a:	f043 0301 	orr.w	r3, r3, #1
 800029e:	60d3      	str	r3, [r2, #12]
}
 80002a0:	bf00      	nop
 80002a2:	46bd      	mov	sp, r7
 80002a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a8:	4770      	bx	lr
 80002aa:	bf00      	nop
 80002ac:	40013c00 	.word	0x40013c00

080002b0 <NVIC_init>:

void NVIC_init()
{
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
	NVIC->ISER[0] |= SET_EXT0_INTERRUPT_ENABLE; 					// Enable EXTI0 interrupt
 80002b4:	4b05      	ldr	r3, [pc, #20]	@ (80002cc <NVIC_init+0x1c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a04      	ldr	r2, [pc, #16]	@ (80002cc <NVIC_init+0x1c>)
 80002ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80002be:	6013      	str	r3, [r2, #0]
}
 80002c0:	bf00      	nop
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	e000e100 	.word	0xe000e100

080002d0 <EXTI0_IRQHandler>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void EXTI0_IRQHandler(void)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
    if (EXTI->PR & (1 << 0))   // check if EXTI0 triggered
 80002d6:	4b11      	ldr	r3, [pc, #68]	@ (800031c <EXTI0_IRQHandler+0x4c>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	f003 0301 	and.w	r3, r3, #1
 80002de:	2b00      	cmp	r3, #0
 80002e0:	d016      	beq.n	8000310 <EXTI0_IRQHandler+0x40>
    {
        EXTI->PR |= (1 << 0);  // clear pending bit
 80002e2:	4b0e      	ldr	r3, [pc, #56]	@ (800031c <EXTI0_IRQHandler+0x4c>)
 80002e4:	695b      	ldr	r3, [r3, #20]
 80002e6:	4a0d      	ldr	r2, [pc, #52]	@ (800031c <EXTI0_IRQHandler+0x4c>)
 80002e8:	f043 0301 	orr.w	r3, r3, #1
 80002ec:	6153      	str	r3, [r2, #20]

        // Simple software debounce
        for(volatile int i=0; i<10000; i++);  // small delay
 80002ee:	2300      	movs	r3, #0
 80002f0:	607b      	str	r3, [r7, #4]
 80002f2:	e002      	b.n	80002fa <EXTI0_IRQHandler+0x2a>
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	3301      	adds	r3, #1
 80002f8:	607b      	str	r3, [r7, #4]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000300:	4293      	cmp	r3, r2
 8000302:	ddf7      	ble.n	80002f4 <EXTI0_IRQHandler+0x24>

        // Toggle LED
        GPIOD->ODR ^= (1 << 12);
 8000304:	4b06      	ldr	r3, [pc, #24]	@ (8000320 <EXTI0_IRQHandler+0x50>)
 8000306:	695b      	ldr	r3, [r3, #20]
 8000308:	4a05      	ldr	r2, [pc, #20]	@ (8000320 <EXTI0_IRQHandler+0x50>)
 800030a:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800030e:	6153      	str	r3, [r2, #20]
    }
}
 8000310:	bf00      	nop
 8000312:	370c      	adds	r7, #12
 8000314:	46bd      	mov	sp, r7
 8000316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031a:	4770      	bx	lr
 800031c:	40013c00 	.word	0x40013c00
 8000320:	40020c00 	.word	0x40020c00

08000324 <main>:

int main(void)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	af00      	add	r7, sp, #0
    /* Loop forever */
	clock_init();
 8000328:	f7ff ff4e 	bl	80001c8 <clock_init>
	system_config_init();
 800032c:	f7ff ff68 	bl	8000200 <system_config_init>
	pin_init();
 8000330:	f7ff ff7a 	bl	8000228 <pin_init>
	exti_init();
 8000334:	f7ff ff9a 	bl	800026c <exti_init>
	NVIC_init();
 8000338:	f7ff ffba 	bl	80002b0 <NVIC_init>
	while (1)
 800033c:	bf00      	nop
 800033e:	e7fd      	b.n	800033c <main+0x18>

08000340 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000340:	480d      	ldr	r0, [pc, #52]	@ (8000378 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000342:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000344:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000348:	480c      	ldr	r0, [pc, #48]	@ (800037c <LoopForever+0x6>)
  ldr r1, =_edata
 800034a:	490d      	ldr	r1, [pc, #52]	@ (8000380 <LoopForever+0xa>)
  ldr r2, =_sidata
 800034c:	4a0d      	ldr	r2, [pc, #52]	@ (8000384 <LoopForever+0xe>)
  movs r3, #0
 800034e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000350:	e002      	b.n	8000358 <LoopCopyDataInit>

08000352 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000352:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000354:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000356:	3304      	adds	r3, #4

08000358 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000358:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800035a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800035c:	d3f9      	bcc.n	8000352 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800035e:	4a0a      	ldr	r2, [pc, #40]	@ (8000388 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000360:	4c0a      	ldr	r4, [pc, #40]	@ (800038c <LoopForever+0x16>)
  movs r3, #0
 8000362:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000364:	e001      	b.n	800036a <LoopFillZerobss>

08000366 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000366:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000368:	3204      	adds	r2, #4

0800036a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800036a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800036c:	d3fb      	bcc.n	8000366 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800036e:	f000 f811 	bl	8000394 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000372:	f7ff ffd7 	bl	8000324 <main>

08000376 <LoopForever>:

LoopForever:
  b LoopForever
 8000376:	e7fe      	b.n	8000376 <LoopForever>
  ldr   r0, =_estack
 8000378:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800037c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000380:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000384:	080003fc 	.word	0x080003fc
  ldr r2, =_sbss
 8000388:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800038c:	2000001c 	.word	0x2000001c

08000390 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000390:	e7fe      	b.n	8000390 <ADC_IRQHandler>
	...

08000394 <__libc_init_array>:
 8000394:	b570      	push	{r4, r5, r6, lr}
 8000396:	4d0d      	ldr	r5, [pc, #52]	@ (80003cc <__libc_init_array+0x38>)
 8000398:	4c0d      	ldr	r4, [pc, #52]	@ (80003d0 <__libc_init_array+0x3c>)
 800039a:	1b64      	subs	r4, r4, r5
 800039c:	10a4      	asrs	r4, r4, #2
 800039e:	2600      	movs	r6, #0
 80003a0:	42a6      	cmp	r6, r4
 80003a2:	d109      	bne.n	80003b8 <__libc_init_array+0x24>
 80003a4:	4d0b      	ldr	r5, [pc, #44]	@ (80003d4 <__libc_init_array+0x40>)
 80003a6:	4c0c      	ldr	r4, [pc, #48]	@ (80003d8 <__libc_init_array+0x44>)
 80003a8:	f000 f818 	bl	80003dc <_init>
 80003ac:	1b64      	subs	r4, r4, r5
 80003ae:	10a4      	asrs	r4, r4, #2
 80003b0:	2600      	movs	r6, #0
 80003b2:	42a6      	cmp	r6, r4
 80003b4:	d105      	bne.n	80003c2 <__libc_init_array+0x2e>
 80003b6:	bd70      	pop	{r4, r5, r6, pc}
 80003b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003bc:	4798      	blx	r3
 80003be:	3601      	adds	r6, #1
 80003c0:	e7ee      	b.n	80003a0 <__libc_init_array+0xc>
 80003c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c6:	4798      	blx	r3
 80003c8:	3601      	adds	r6, #1
 80003ca:	e7f2      	b.n	80003b2 <__libc_init_array+0x1e>
 80003cc:	080003f4 	.word	0x080003f4
 80003d0:	080003f4 	.word	0x080003f4
 80003d4:	080003f4 	.word	0x080003f4
 80003d8:	080003f8 	.word	0x080003f8

080003dc <_init>:
 80003dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003de:	bf00      	nop
 80003e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003e2:	bc08      	pop	{r3}
 80003e4:	469e      	mov	lr, r3
 80003e6:	4770      	bx	lr

080003e8 <_fini>:
 80003e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ea:	bf00      	nop
 80003ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ee:	bc08      	pop	{r3}
 80003f0:	469e      	mov	lr, r3
 80003f2:	4770      	bx	lr
